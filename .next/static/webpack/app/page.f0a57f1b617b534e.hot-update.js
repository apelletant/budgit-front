"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./infrastructure/repository/expense.ts":
/*!**********************************************!*\
  !*** ./infrastructure/repository/expense.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpenseRepository: () => (/* binding */ ExpenseRepository)\n/* harmony export */ });\nconst REPOSITORY_URL = \"localhost:8080\";\nclass ExpenseRepository {\n    async fetchExpenses() {\n        const response = await fetch(\"\".concat(this.baseUrl, \"/expenses\"));\n        if (!response.ok) {\n            console.log(\"Failed to fetch posts: \".concat(response.status, \" \").concat(response.statusText));\n            throw new Error(\"Failed to fetch posts: \".concat(response.status, \" \").concat(response.statusText));\n        }\n        const data = await response.json();\n        return data;\n    }\n    constructor(){\n        this.baseUrl = REPOSITORY_URL;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2luZnJhc3RydWN0dXJlL3JlcG9zaXRvcnkvZXhwZW5zZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTUEsaUJBQWlCO0FBTWhCLE1BQU1DO0lBR1gsTUFBTUMsZ0JBQW9DO1FBQ3hDLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxHQUFnQixPQUFiLElBQUksQ0FBQ0MsT0FBTyxFQUFDO1FBRTdDLElBQUksQ0FBQ0YsU0FBU0csRUFBRSxFQUFFO1lBQ2hCQyxRQUFRQyxHQUFHLENBQUMsMEJBQTZDTCxPQUFuQkEsU0FBU00sTUFBTSxFQUFDLEtBQXVCLE9BQXBCTixTQUFTTyxVQUFVO1lBQzVFLE1BQU0sSUFBSUMsTUFBTSwwQkFBNkNSLE9BQW5CQSxTQUFTTSxNQUFNLEVBQUMsS0FBdUIsT0FBcEJOLFNBQVNPLFVBQVU7UUFDbEY7UUFFQSxNQUFNRSxPQUFrQixNQUFNVCxTQUFTVSxJQUFJO1FBQzNDLE9BQU9EO0lBQ1Q7O2FBWmlCUCxVQUFVTDs7QUFhN0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcGVsbGV0YW50L0RvY3VtZW50cy9wZXJzby9idWRnaXQvYnVkZ2l0LWZyb250L2luZnJhc3RydWN0dXJlL3JlcG9zaXRvcnkvZXhwZW5zZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHBlbnNlIH0gZnJvbSBcIkAvdHlwZXMvZXhwZW5zZVwiXG5cbmNvbnN0IFJFUE9TSVRPUllfVVJMID0gXCJsb2NhbGhvc3Q6ODA4MFwiXG5cbmV4cG9ydCBpbnRlcmZhY2UgSUV4cGVuc2VSZXBvc2l0b3J5IHtcbiAgZmV0Y2hFeHBlbnNlcygpOiBQcm9taXNlPEV4cGVuc2VbXT5cbn1cblxuZXhwb3J0IGNsYXNzIEV4cGVuc2VSZXBvc2l0b3J5IGltcGxlbWVudHMgSUV4cGVuc2VSZXBvc2l0b3J5IHtcbiAgcHJpdmF0ZSByZWFkb25seSBiYXNlVXJsID0gUkVQT1NJVE9SWV9VUkxcblxuICBhc3luYyBmZXRjaEV4cGVuc2VzKCk6IFByb21pc2U8RXhwZW5zZVtdPiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2V4cGVuc2VzYClcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnNvbGUubG9nKGBGYWlsZWQgdG8gZmV0Y2ggcG9zdHM6ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YClcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIHBvc3RzOiAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApXG4gICAgfVxuXG4gICAgY29uc3QgZGF0YTogRXhwZW5zZVtdID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxufVxuIl0sIm5hbWVzIjpbIlJFUE9TSVRPUllfVVJMIiwiRXhwZW5zZVJlcG9zaXRvcnkiLCJmZXRjaEV4cGVuc2VzIiwicmVzcG9uc2UiLCJmZXRjaCIsImJhc2VVcmwiLCJvayIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiRXJyb3IiLCJkYXRhIiwianNvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./infrastructure/repository/expense.ts\n"));

/***/ })

});